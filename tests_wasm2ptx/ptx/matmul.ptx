.version 7.8
.target sm_80
.address_size 64

.visible .entry matmul(
  .param .u64 matmul_param_0,
  .param .u64 matmul_param_1,
  .param .u64 matmul_param_2,
  .param .u64 matmul_param_3,
  .param .u64 matmul_param_4,
  .param .u64 matmul_param_5
) {
.reg .b32 %r0;
.reg .pred %pd<1>;
.reg .f64 %fd<4>;
.reg .u64 %rd<19>;
// Prologue Begins;
mov.u32 %r0, %tid.x;
cvt.u64.u32 %rd1, %r0;
mov.u32 %r0, %ntid.x;
cvt.u64.u32 %rd2, %r0;
mov.u32 %r0, %ctaid.x;
cvt.u64.u32 %rd3, %r0;
ld.param.u64 %rd4, [matmul_param_0];
cvta.to.global.u64 %rd4, %rd4;
ld.param.u64 %rd5, [matmul_param_1];
cvta.to.global.u64 %rd5, %rd5;
ld.param.u64 %rd6, [matmul_param_2];
cvta.to.global.u64 %rd6, %rd6;
ld.param.u64 %rd7, [matmul_param_3];
ld.param.u64 %rd8, [matmul_param_4];
ld.param.u64 %rd9, [matmul_param_5];
// Prologue ends;
// local.get;
// local.get;
// i32.mul;
mul.lo.u64 %rd18, %rd2, %rd3;
// local.get;
// i32.add;
add.u64 %rd18, %rd18, %rd1;
// local.set;
// local.get;
// local.get;
// i32.div_s;
div.u64 %rd10, %rd18, %rd8;
// local.set;
// local.get;
// local.get;
// local.get;
// i32.mul;
mul.lo.u64 %rd11, %rd10, %rd8;
// i32.sub;
sub.u64 %rd11, %rd18, %rd11;
// local.set;
// f64.const;
mov.f64 %fd1, 0.0000000000000000e+00;
// local.set;
// i32.const;
mov.s64 %rd12, 0;
// local.set;
// loop;
$L0:
// local.get;
// local.get;
// i32.mul;
mul.lo.u64 %rd13, %rd10, %rd9;
// local.get;
// i32.add;
add.u64 %rd13, %rd13, %rd12;
// i32.const;
mov.s64 %rd17, 8;
// i32.mul;
mul.lo.u64 %rd13, %rd13, %rd17;
// local.get;
// i32.add;
add.u64 %rd13, %rd13, %rd4;
// local.set;
// local.get;
// local.get;
// i32.mul;
mul.lo.u64 %rd14, %rd12, %rd8;
// local.get;
// i32.add;
add.u64 %rd14, %rd14, %rd11;
// i32.const;
mov.s64 %rd17, 8;
// i32.mul;
mul.lo.u64 %rd14, %rd14, %rd17;
// local.get;
// i32.add;
add.u64 %rd14, %rd14, %rd5;
// local.set;
// local.get;
// f64.load;
ld.global.f64 %fd2, [%rd13];
// local.get;
// f64.load;
ld.global.f64 %fd3, [%rd14];
// f64.mul;
mul.f64 %fd2, %fd2, %fd3;
// local.get;
// f64.add;
add.f64 %fd2, %fd2, %fd1;
// local.set;
// local.get;
// i32.const;
mov.s64 %rd15, 1;
// i32.add;
add.u64 %rd15, %rd12, %rd15;
// local.set;
// local.get;
// local.get;
// i32.lt_s;
setp.lt.u64 %pd0, %rd15, %rd9;
// br_if;
mov.f64 %fd1, %fd2;
mov.u64 %rd12, %rd15;
mov.u64 %rd15, %rd14;
mov.u64 %rd14, %rd13;
@%pd0 bra $L0;
// end;
// local.get;
// local.get;
// i32.mul;
mul.lo.u64 %rd13, %rd10, %rd8;
// local.get;
// i32.add;
add.u64 %rd13, %rd13, %rd11;
// i32.const;
mov.s64 %rd17, 8;
// i32.mul;
mul.lo.u64 %rd13, %rd13, %rd17;
// local.get;
// i32.add;
add.u64 %rd13, %rd13, %rd6;
// local.set;
// local.get;
// local.get;
// f64.store;
st.global.f64 [%rd13], %fd1;
// end;
}
